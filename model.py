# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vXUnKqiEYSKW5x0McKcvpSZxZNtdkE36
"""

from google.colab import files
uploaded = files.upload()

import tensorflow as tf
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

input_columns = ['year', 'month', 'day', 'hour', 'minute', 'moisture0', 'moisture1','moisture2']
prediction = ['moisture3']

train_size = 3000
test_size = 1000

data_frame = pd.read_csv('plant_vase1.CSV')
data_frame

data_frame.columns

data_frame.drop(columns=['irrgation'])

data_frame[['moisture0', 'moisture1','moisture2', 'moisture3']].plot()

X_train = data_frame[input_columns][:train_size]
Y_train = data_frame[prediction][:train_size]
X_test = data_frame[input_columns][train_size:]
Y_test = data_frame[prediction][train_size:]

X_train.shape, Y_train.shape

model = tf.keras.models.Sequential()
model.add(tf.keras.layers.Dense(units=1, input_shape=(len(input_columns),)))
model.summary()

model.compile(optimizer='adam', loss='MSE', metrics=['mean_absolute_error'])

model.fit(X_train,Y_train, epochs=100)

model.evaluate(X_test, Y_test)

model.metrics_names

weights = np.array(model.get_weights())
model.get_weights()

Y_test.to_numpy()[58]

prediction = model.predict(X_test.to_numpy())

count = 0
for i in range(len(X_test)):
    if np.abs(prediction[i][0] - Y_test.to_numpy()[i]) > 0.1:
        count += 1
print(count/len(X_test))

plt.plot(prediction)